/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U         &kp I      &kp O    &kp P        &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J         &kp K      &kp L    &kp SEMI     &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M         &kp COMMA  &kp DOT  &lt 3 SLASH  &kp GRAVE
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &lt 2 ESCAPE  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1            &kp N2        &kp N3       &kp N4         &kp N5           &kp N6                  &kp N7                   &kp N8                 &kp N9             &kp N0                   &kp BSPC
&kp LEFT_CONTROL  &kt LS(LC(LGUI))  &kp HOME      &kp END      &kp INSERT     &kp DELETE       &kp LEFT                &kp DOWN                 &kp UP                 &kp RIGHT          &mkp MB4                 &mkp MB5
&kp LEFT_SHIFT    &kt LS(LGUI)      &kt LC(LGUI)  &kp PAGE_UP  &kp PAGE_DOWN  &kp BACKSPACE    &kp LG(LS(LEFT_BRACE))  &kp LS(LG(RIGHT_BRACE))  &kt RC(RIGHT_COMMAND)  &kt RS(RIGHT_GUI)  &kp RS(RC(RIGHT_SHIFT))  &kt LS(LA(LC(LEFT_GUI)))
                                                  &kp LGUI     &trans         &kp SPACE        &kp RET                 &trans                   &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL              &kp AT                &kp HASH          &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK          &kp LPAR          &kp RPAR  &kp BSPC
&kp LCTRL  &kt LS(LC(LEFT_GUI))  &kp LPAR              &kp RPAR          &kp LBRC  &kp RBRC     &kp MINUS  &kp EQUAL  &kp LESS_THAN      &kp GREATER_THAN  &kp BSLH  &kp GRAVE
&kp LSHFT  &kt LG(LEFT_SHIFT)    &kp LC(LEFT_COMMAND)  &kp F3            &kp F4    &kp F5       &kp UNDER  &kp PLUS   &kp SLASH          &kp QUESTION      &kp PIPE  &kp TILDE
                                                       &kp LEFT_COMMAND  &trans    &kp SPACE    &kp RET    &trans     &kp LG(RIGHT_ALT)
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_CLR_ALL  &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp F7   &kp F8   &kp F9
&kp K_MUTE  &kp C_VOL_DN    &kp C_VOLUME_UP  &kt GLOBE     &trans        &trans          &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp F10  &kp F11  &kp F12
&kp F1      &kp F2          &kp F3           &kp F4        &kp F5        &kp F6          &kp N7        &kp N8        &kp N9        &kp N0   &kp F13  &kp F14
                                             &trans        &trans        &trans          &trans        &trans        &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
