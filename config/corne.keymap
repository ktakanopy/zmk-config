/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

&msc {
    time-to-max-speed-ms = <500>;                 /* <--- How long time until max speed is reached */
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        tilde_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp TILDE &kp SPACE>;

            label = "NEW_MACRO";
        };

        home_tilde: home_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp TILDE &kp SPACE &kp SLASH>;

            label = "HOME_TILDE";
        };

        g_: g_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp G &kp UNDERSCORE>;

            label = "G_";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q        &kp W       &kp E         &kp R             &kp T    &kp Y      &kp U            &kp I            &kp O       &kp P                &kp LEFT_ALT
&kp LSHFT  &mt LCTRL A  &mt LGUI S  &mt LGUI D    &mt LEFT_SHIFT F  &kp G    &kp H      &mt LSHIFT J     &mt LGUI K       &mt LALT L  &mt LCTRL SEMICOLON  &kp SINGLE_QUOTE
&kp LCTRL  &lt 4 Z      &kp X       &kp C         &kp V             &kp B    &kp N      &kp M            &kp COMMA        &kp DOT     &lt 4 SLASH          &kp RGUI
                                    &mt LGUI ESC  &lt 1 SPACE       &mo 2    &lt 3 RET  &lt 4 BACKSPACE  &mt DELETE LGUI
            >;
        };

        num {
            display-name = "num";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1             &kp N2              &kp N3               &kp NUMBER_4          &kp N5               &kp NUMBER_6  &kp N7         &kp N8      &kp N9  &kp N0  &kp LEFT_ALT
&kp LSHFT  &kp LA(LS(LCTRL))  &kp LG(LEFT_BRACE)  &kp LG(RIGHT_BRACE)  &kp LA(LS(LCTRL))     &kp LG(LS(LCTRL))    &caps_word    &kp N4         &kp N5      &kp N6  &none   &kp LSHFT
&kp LCTRL  &none              &kp PAGE_UP         &kp PAGE_DOWN        &kp LS(LA(LC(LGUI)))  &g_                  &tilde_macro  &kp N1         &kp N2      &kp N3  &none   &kp RGUI
                                                  &kp LGUI             &kp SPACE             &none                &kp RET       &kp BACKSPACE  &kp DELETE
            >;
        };

        mouse {
            display-name = "mouse";
            bindings = <
&kp TAB    &kp N1      &kp N2     &kp N3      &kp N4       &kp N5        &kp N6         &kp N7          &kp N8          &kp N9        &kp N0           &kp LEFT_ALT
&kp LSHFT  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_REDO    &kp PAGE_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp LSHFT
&kp LCTRL  &trans      &trans     &trans      &trans       &trans        &kp PAGE_DOWN  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &kp RGUI
                                  &kp LGUI    &kp SPACE    &trans        &mkp LCLK      &mkp RCLK       &none
            >;
        };

        sym {
            display-name = "symbol";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp GRAVE        &kp TILDE     &kp HASH      &kp AMPS   &kp DOUBLE_QUOTES    &kp CARET  &kp AT            &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOLLAR         &kp LEFT_ALT
&kp LSHFT  &kp EXCLAMATION  &kp UNDER     &kp COLON     &kp EQUAL  &kp PERCENT          &kp MINUS  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp SINGLE_QUOTE
&kp LCTRL  &kp TILDE        &kp QUESTION  &kp ASTERISK  &kp PLUS   &kp BACKSLASH        &kp SLASH  &kp SEMICOLON     &kp LESS_THAN         &kp GREATER_THAN       &kp DOUBLE_QUOTES  &kp PIPE
                                          &kp LGUI      &kp COMMA  &kp DOT              &kp RET    &trans            &none
            >;
        };

        navfun {
            display-name = "navfun";
            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4           &kp F5          &kp F6        &none         &kp LG(LEFT_BRACKET)  &kp LG(LEFT_BRACE)  &kp LG(RIGHT_BRACE)  &kp LG(RIGHT_BRACKET)  &none
&kp F7  &kp F8  &kp F9        &kp F10          &kp F11         &kp F12       &caps_word    &kp LEFT              &kp DOWN            &kp UP               &kp RIGHT              &kp LSHFT
&none   &none   &kp C_VOL_DN  &kp C_VOLUME_UP  &bt BT_CLR_ALL  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1          &bt BT_SEL 2        &bt BT_SEL 3         &none                  &kp LGUI
                              &kp LGUI         &kp SPACE       &none         &kp RET       &kp BACKSPACE         &kp LSHIFT
            >;
        };
    };
};
