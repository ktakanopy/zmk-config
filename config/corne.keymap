/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

&msc {
    time-to-max-speed-ms = <500>;                 /* <--- How long time until max speed is reached */
};

&lt {
    quick-tap-ms = <0>;
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        fun_trigger {
            bindings = <&tog 4>;
            key-positions = <40 41 39>;
            timeout-ms = <50>;
            layers = <1 2 3 0 4>;
        };

        swapper {
            bindings = <&swapper>;
            key-positions = <16 38>;
        };
    };

    macros {
        tilde_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp TILDE &kp SPACE>;

            label = "NEW_MACRO";
        };

        home_tilde: home_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp TILDE &kp SPACE &kp SLASH>;

            label = "HOME_TILDE";
        };

        g_: g_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp G &kp UNDERSCORE>;

            label = "G_";
        };

        home_tilde_hidden: home_tilde_hidden {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_tap>,
                <&kp TILDE &kp SPACE &kp SLASH &kp PERIOD>;

            label = "HOME_TILDE_HIDDEN";
        };

        tmux_visual: tmux_visual {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp LC(SPACE) &kp LEFT_BRACKET>;

            label = "TMUX_VISUAL";
        };

        // Swapper for smart alt+tab

        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;

            ignored-key-positions = <21>;
        };

        swapper_back: swapper_back {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER_BACK";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp LS(TAB)>, <&kt LGUI>;

            ignored-key-positions = <21>;
        };

        // Swapper for smart alt+tab
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB              &kp Q        &kp W       &kp E       &kp R         &kp T        &kp Y  &kp U             &kp I            &kp O       &kp P                   &kp BACKSPACE
&mt LSHIFT ESCAPE    &mt LCTRL A  &mt LALT S  &mt LCMD D  &mt LSHIFT F  &kp G        &kp H  &mt LEFT_SHIFT J  &mt LGUI K       &mt LALT L  &mt LCTRL SINGLE_QUOTE  &sk LEFT_SHIFT
&mt LCTRL LC(SPACE)  &kp Z        &kp X       &kp C       &kp V         &kp B        &kp N  &kp M             &kp COMMA        &kp DOT     &kp SLASH               &kp SEMICOLON
                                              &kp LGUI    &lt 1 SPACE   &lt 3 TAB    &mo 2  &lt 1 RET         &mt LALT DELETE
            >;
        };

        arrow {
            display-name = "arrow";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB                &kp N1               &kp N2                   &kp N3                        &kp NUMBER_4        &kp N5     &kp NUMBER_6           &kp N7          &kp N8        &kp N9           &kp N0      &kp BACKSPACE
&mt LEFT_SHIFT ESCAPE  &mt LCTRL LC(GRAVE)  &mt LALT LS(LEFT_BRACE)  &mt LG(LGUI) LS(RIGHT_BRACE)  &mt LSHIFT LS(RET)  &kp RET    &kp LEFT_ARROW         &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &caps_word  &kp PAGE_UP
&kp LCTRL              &kt HASH             &kp DOLLAR               &g_                           &kp TAB             &g_        &kp LC(RIGHT_BRACKET)  &kp HOME        &kp END       &trans           &none       &kp PAGE_DOWN
                                                                     &mt LGUI LC(SPACE)            &kp LALT            &none      &none                  &kp RET         &kp DEL
            >;

            label = "arrow";
        };

        sym {
            display-name = "symbol";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp GRAVE                  &kp TILDE       &kp HASH        &kp AMPS              &kp DOUBLE_QUOTES    &kp CARET  &kp AT                   &kp LEFT_BRACE             &kp RIGHT_BRACE             &kp DOLLAR               &tmux_visual
&kp RSHFT  &mt LCTRL RS(EXCLAMATION)  &mt LALT UNDER  &mt LGUI COLON  &mt LEFT_SHIFT EQUAL  &kp PERCENT          &kp MINUS  &mt LSHIFT LEFT_BRACKET  &mt LGUI LEFT_PARENTHESIS  &mt LALT RIGHT_PARENTHESIS  &mt LCTRL RIGHT_BRACKET  &kp LSHIFT
&kp LCTRL  &kp TILDE                  &kp QUESTION    &kp ASTERISK    &kp PLUS              &kp BACKSLASH        &kp SLASH  &kp SEMICOLON            &kp LESS_THAN              &kp GREATER_THAN            &kp PIPE                 &kp LCTRL
                                                      &kp LGUI        &kp PERIOD            &kp COMMA            &none      &trans                   &none
            >;
        };

        mouse {
            display-name = "mouse";
            bindings = <
&kp TAB    &kp LG(GRAVE)       &kp LG(LEFT_BRACE)  &kp LG(RIGHT_BRACE)  &kp LG(TAB)  &none            &trans         &trans          &mmv MOVE_UP    &trans           &trans           &trans
&kp LALT   &kp LG(Z)           &kp LG(X)           &kp LG(C)            &kp LG(V)    &kp LG(LS(Z))    &kp PAGE_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &sk LSHIFT       &kp LGUI
&kp LCTRL  &home_tilde_hidden  &home_tilde         &tilde_macro         &g_          &tilde_macro     &kp PAGE_DOWN  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP     &msc SCRL_RIGHT  &kp LALT
                                                   &none                &none        &none            &mkp LCLK      &mkp RCLK       &mkp MCLK
            >;
        };

        fun {
            display-name = "fun";
            bindings = <
&none       &kp F1        &kp F2        &kp F3        &kp F4          &kp F5      &kp F6      &kp F7      &kp F8        &kp F9           &kp F10     &kp F11
&kp LSHIFT  &kp F11       &kp F12       &none         &none           &none       &caps_word  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_PLAY  &none
&kp LCTRL   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &none       &none       &none       &none         &none            &none       &kp LALT
                                        &kp LGUI      &kp LEFT_SHIFT  &kp LALT    &none       &none       &none
            >;
        };
    };
};
