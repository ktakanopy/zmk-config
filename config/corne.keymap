/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <125>;
};

&mmv {
    time-to-max-speed-ms = <680>;
    acceleration-exponent = <2>;
};

&msc {
    time-to-max-speed-ms = <500>;                 /* <--- How long time until max speed is reached */
};

&lt { quick-tap-ms = <125>; };

/ {
    combos {
        compatible = "zmk,combos";

        cmd_space {
            bindings = <&kp LG(SPACE)>;
            key-positions = <3 4>;
            layers = <0>;
        };

        cmd_shift {
            bindings = <&kt LG(LSHIFT)>;
            key-positions = <14 15>;
            layers = <1>;
        };

        ctrl_opt {
            bindings = <&kt LC(LALT)>;
            key-positions = <16 15>;
            layers = <1>;
        };

        ctrl_cmd {
            bindings = <&kt LC(LGUI)>;
            key-positions = <15 13>;
            layers = <1>;
        };
    };

    macros {
        tilde_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp TILDE &kp SPACE>;

            label = "NEW_MACRO";
        };

        home_tilde: home_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp TILDE &kp SPACE &kp SLASH>;

            label = "HOME_TILDE";
        };

        g_: g_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp G &kp UNDERSCORE>;

            label = "G_";
        };

        home_tilde_hidden: home_tilde_hidden {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&none>,
                <&macro_tap>,
                <&kp TILDE &kp SPACE &kp SLASH &kp PERIOD>;

            label = "HOME_TILDE_HIDDEN";
        };

        tmux_visual: tmux_visual {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp LC(SPACE) &kp LEFT_BRACKET>;

            label = "TMUX_VISUAL";
        };

        // Swapper for smart alt+tab

        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;

            ignored-key-positions = <21>;
        };

        // Swapper for smart alt+tab

        alt_swapper: alt_swapper {
            compatible = "zmk,behavior-tri-state";
            label = "ALTSWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;

            ignored-key-positions = <21>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E            &kp R        &kp T        &kp Y      &kp U            &kp I            &kp O    &kp P      &kp BACKSPACE
&kp LSHIFT  &kp A  &kp S  &kp D            &kp F        &kp G        &kp H      &kp J            &kp K            &kp L    &kp APOS   &kp LSHIFT
&kp LCTRL   &kp Z  &kp X  &kp C            &kp V        &kp B        &kp N      &kp M            &kp COMMA        &kp DOT  &kp SLASH  &kp LALT
                          &mt LGUI ESCAPE  &lt 1 SPACE  &lt 3 TAB    &lt 2 RET  &lt 1 BACKSPACE  &mt LALT DELETE
            >;
        };

        arrow {
            display-name = "arrow";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1          &kp N2              &kp N3                  &kp NUMBER_4            &kp N5          &kp NUMBER_6  &kp N7         &kp N8    &kp N9     &kp N0      &kp DELETE
&kp LSHIFT  &kp LG(GRAVE)   &kp LG(LEFT_BRACE)  &kp LG(RIGHT_BRACE)     &kp LC(SPACE)           &swapper        &kp LEFT      &kp DOWN       &kp UP    &kp RIGHT  &caps_word  &kp LSHIFT
&kp LCTRL   &kp LG(LSHIFT)  &kp LG(LA(LCTRL))   &kp LA(LG(LEFT_SHIFT))  &kp LA(LC(LG(LSHIFT)))  &alt_swapper    &none         &kp HOME       &kp END   &none      &none       &kp LALT
                                                &kp LEFT_GUI            &none                   &none           &kp ENTER     &kp BACKSPACE  &kp LALT
            >;

            label = "arrow";
        };

        sym {
            display-name = "symbol";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp GRAVE        &kp TILDE     &kp HASH      &kp AMPS   &kp DOUBLE_QUOTES    &kp CARET  &kp AT            &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp DOLLAR         &kp LEFT_ALT
&kp RSHFT  &kp EXCLAMATION  &kp UNDER     &kp COLON     &kp EQUAL  &kp PERCENT          &kp MINUS  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp LSHIFT
&kp LCTRL  &kp TILDE        &kp QUESTION  &kp ASTERISK  &kp PLUS   &kp BACKSLASH        &kp SLASH  &kp SEMICOLON     &kp LESS_THAN         &kp GREATER_THAN       &kp PIPE           &kp LCTRL
                                          &kp LSHIFT    &kp LGUI   &kp DOT              &none      &trans            &none
            >;
        };

        mouse {
            display-name = "mouse";
            bindings = <
&kp TAB    &trans             &kp LG(LEFT_BRACE)  &kp LG(RIGHT_BRACE)  &trans          &kp LG(ENTER)    &trans         &trans          &mmv MOVE_UP    &trans           &trans           &trans
&kp LALT   &tilde_macro       &home_tilde         &home_tilde_hidden   &g_             &tmux_visual     &kp PAGE_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none            &kp LGUI
&kp LCTRL  &kp LA(BACKSPACE)  &kp BSPC            &kp ENTER            &kp LA(DELETE)  &kp LC(ENTER)    &kp PAGE_DOWN  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP     &msc SCRL_RIGHT  &kp LALT
                                                  &none                &none           &none            &mkp LCLK      &mkp RCLK       &mkp MCLK
            >;
        };

        fun {
            display-name = "fun";
            bindings = <
&none       &kp F1        &kp F2        &kp F3        &kp F4          &kp F5      &kp F6      &kp F7      &kp F8        &kp F9           &kp F10     &kp F11
&kp LSHIFT  &kp F11       &kp F12       &none         &none           &none       &caps_word  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_PLAY  &none
&kp LCTRL   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &none       &none       &none       &none         &none            &none       &kp LALT
                                        &kp LGUI      &kp LEFT_SHIFT  &kp LALT    &none       &none       &none
            >;
        };
    };
};
